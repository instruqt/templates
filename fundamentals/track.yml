slug: fundamentals
id: ir7yr6ycj3wd
type: track
title: Fundamentals
teaser: Learn the basics of React.
description: React is a Javascript library, developed in 2013 by Facebook. React is popular because of it's simplicity for building declarative user interfaces. This track will take you through the fundamentals of React development.
icon: https://storage.googleapis.com/instruqt-react-foundation/react-2.png
tags:
- development
- React
- front-end
owner: xebia
developers:
- bdenhollander@xebia.com
private: true
published: true
show_timer: true
challenges:
- slug: mounting-react
  id: yivafcxiwtud
  type: challenge
  title: "\U0001F3D7 Mounting React"
  teaser: Start by inserting React in a website.
  notes:
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Mounting%20React%20-%20front.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/React.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Why%20React%3F.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/React%20Is%20Just%20The%20UI.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Mounting%20to%20a%20document.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Mounting%20to%20a%20document%20-%202.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Mounting%20React%20-%20assignment.svg
  assignment: |-
    In order to insert React to a website, we need to find the root node of the HTML document.
    From this node React can build up the app you're creating.

    - Use the index.js file to mount the Greeting component into the root element with id: root.

    Hint: [Document.getElementById](https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById)

    Hint: [ReactDOM.render](https://reactjs.org/docs/react-dom.html#render)
  tabs:
  - title: Code editor
    type: service
    hostname: container
    port: 8080
  difficulty: basic
  timelimit: 2000
- slug: component-as-class
  id: lpor5ff8azdh
  type: challenge
  title: "\U0001F3DB Defining a component as a class"
  teaser: Learn the ways of defining a component.
  notes:
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20a%20class.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20a%20class%20-%201.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20a%20class%20-%202.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20a%20class%20-%203.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20a%20class%20-%20assignment.svg
  assignment: |-
    Currently, the Greeting component is a functional component.

    - Change this component to a class component.

    Hint:

    [React: Components and props](https://reactjs.org/docs/components-and-props.html)
  tabs:
  - title: Code editor
    type: service
    hostname: container
    port: 8080
  difficulty: basic
  timelimit: 2000
- slug: component-as-arrow-function
  id: soizwyppqu5q
  type: challenge
  title: "\U0001F3F9 Defining a component as an arrow-function"
  teaser: Learn the ways of defining a component.
  notes:
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20an%20arrow-function.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20an%20arrow-function%20-%201.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20an%20arrow-function%20-%202.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Defining%20a%20component%20as%20an%20arrow-function%20-%20assignment.svg
  assignment: |-
    Now that the you've learned to create a class component from a functional component, let's change the signature again.

    - This time, change the Greeting component to an arrow-function.

    Hint:

    [React: Components and props](https://reactjs.org/docs/components-and-props.html)

    [Mozilla: Arrow function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)
  tabs:
  - title: Code editor
    type: service
    hostname: container
    port: 8080
  difficulty: basic
  timelimit: 2000
- slug: pass-data-into-a-component
  id: mloheplntptv
  type: challenge
  title: Pass data into a component
  teaser: Learn how to use data in your component.
  notes:
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Pass%20data%20into%20a%20component.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Pass%20data%20into%20a%20component%20-%20example.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Pass%20data%20into%20a%20component%20-%20assignment.svg
  assignment: "Currently, the Greeting component displays the \"Welcome Student\" text from within the component.\n\nIn this assignment you'll have change the component to display your name, by passing the name into the component, using props.\n\nHint:\n    \n[React: Components and props](https://reactjs.org/docs/components-and-props.html)"
  tabs:
  - title: Code editor
    type: service
    hostname: container
    port: 8080
  difficulty: basic
  timelimit: 2000
- slug: children
  id: ax9mwxunmxmr
  type: challenge
  title: "\U0001F468‍\U0001F468‍\U0001F467‍\U0001F466 Children"
  teaser: How to use children in your component.
  notes:
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Children%20-%20front.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Chrildren%20-%20example.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Children%20-%20assignment.svg
  assignment: |-
    The `children` is a data structure that's part of the props object. It can be used inside components to render their child components.
    In the App component, the ShoppingCart component is used and children are given to this component.
    - In the ShoppingCart component, make sure that the given children are displayed.

    Hint:

    [React: Components and props](https://reactjs.org/docs/components-and-props.html)
  tabs:
  - title: Code editor
    type: service
    hostname: container
    port: 8080
  difficulty: basic
  timelimit: 2000
- slug: jsx-mixes-with-regular-javascript
  id: skuvgwdjvr2a
  type: challenge
  title: "\U0001F500 JSX mixes with regular JavaScript"
  teaser: Anything between curly braces `{ }` is just JavaScript.
  notes:
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/JSX%20mixes%20with%20regular%20JavaScript%20-%20front.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/JSX%20overview.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/JSX%20mixes%20with%20regular%20JavaScript.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/JSX%20mixes%20with%20regular%20JavaScript%20-%202.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/JSX%20mixes%20with%20regular%20JavaScript%20-%20assignment.svg
  assignment: |-
    We're now creating an shopping list app, where we've provided you with a short list of groceries.
    - It's you job to display the products and amount of the shopping list. Make use of `<li>` and `<ul>` to create the list inside the ShoppingList component.

    Hint:

    [The Unordered List element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul)

    [JavaScript's map function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)

    [Template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals)
  tabs:
  - title: Code editor
    type: service
    hostname: container
    port: 8080
  difficulty: basic
  timelimit: 2000
- slug: jumbotron
  id: fytyadva50gb
  type: challenge
  title: ✈️ Jumbotron
  teaser: Complete the fundamentals track by creating the Jumbotron webpage
  notes:
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Jumbotron.svg
  - type: image
    url: https://storage.googleapis.com/instruqt-react-foundation/fundamentals/Jumbotron%20-%20assignment.svg
  assignment: |-
    Combine everything you've learned by creating a webpage.

    1. Use Bootstrap to build a page similar to https://getbootstrap.com/docs/4.1/examples/jumbotron/
    2. Render the data from the "./data.js" file
  tabs:
  - title: Code editor
    type: service
    hostname: container
    port: 8080
  difficulty: basic
  timelimit: 2000
checksum: "12796080506793515769"
